import { useState } from "react";
import { Button, Form } from "react-bootstrap";
import { useNavigate } from "react-router-dom";
import "./CurrentResultPage.css"
import { PreviousResultType, useAIResults } from '../AIResultsContext';
import PreviousResult from "./components/PreviousResult";
import { renderToString } from 'react-dom/server';


export let keyData = "";

const saveKeyData = "MYKEY";
const prevKey = localStorage.getItem(saveKeyData);
if (prevKey !== null) {
  keyData = JSON.parse(prevKey);
}

function NavigationButton() {
  const navigate = useNavigate();
  return (
    <div>
      <Button className="Button" onClick={() => navigate("/Home")}>
        Home Page
      </Button>
    </div>
  );
}

function CurrentResultPage() {
  const [key, setKey] = useState<string>(keyData);
  const finishedResult: PreviousResultType = useAIResults();

  function handleSubmit() {
    localStorage.setItem(saveKeyData, JSON.stringify(key));
    window.location.reload();
  }

  function changeKey(event: React.ChangeEvent<HTMLInputElement>) {
    setKey(event.target.value);
  }


  // credit to https://stackoverflow.com/questions/68152987/how-to-download-part-of-a-react-component
  function donwloadResult(){
    // putting the css here makes in look ugly so i put it in public
    fetch("/Result.css").then((x)=>{
      x.text().then((y)=>{
        const html = renderToString(<div>
          <style>{y}</style><PreviousResult {...finishedResult}></PreviousResult></div>)
        const blob = new Blob([html]);
        const url = URL.createObjectURL(blob);
        const tempEl = document.createElement("a");
        document.body.appendChild(tempEl);
        tempEl.href = url;
        tempEl.download = "CareerResults.html";
        tempEl.click();
        setTimeout(() => {
          URL.revokeObjectURL(url);
          if(tempEl.parentNode){
            tempEl.parentNode.removeChild(tempEl);
          }
        }, 2000);
  
  
  })
    })


  }

  return (
    <div className="Results">
      
      <div className="header-content">
        <h1>Results</h1>
        <NavigationButton />
      </div>
      <div className="results-container">
        {/* Just like my heckin fortune!!! Shows a defined, simple, determined result */}
        <div className="final-career" style={{"color":finishedResult.colorVibe}}>
          {finishedResult.finalDeclaredFuture +"~~"+ finishedResult.finalCareer}
        </div>
        {/* Shows individual insights if finished loading */}
        <div className="results-list">
          <ul style={{ listStyleType: "none", paddingLeft: 0, margin: 0 }}>
            {finishedResult.results.map((res, i) => (
              <li key={i}>{res}</li>
            ))}
          </ul>
        </div>
        {/* Shows character analysis */}
        <div className="final-results">
          <h3>Character Analysis:</h3>
          <p>{finishedResult.finalResult}</p>
        </div>
        {/* Shows career prediction */}
        <div className="final-sentence">
          <h3>Overall Suggestion:</h3>
          <p>{finishedResult.finalSentence}</p>
        </div>
        <div className="date">Generated at: {finishedResult.date}</div>
        {/*Makes user not do stupid stuff*/}
        <div className="ai-disclaimer">
          Generated by AI: All choices are yours, and the future is ultimately in your hands. Not responsible for any user damages.
        </div>
      </div>
      <Button onClick={donwloadResult}>
        Download?
      </Button>

      <footer>
        <Form>
          <Form.Label htmlFor="api-key-input">API Key:</Form.Label>
          <Form.Control
            id="api-key-input"
            type="password"
            placeholder="Insert API Key Here"
            value={key}
            onChange={changeKey}
          />
          <br />
          <Button className="Submit-Button" onClick={handleSubmit}>
            Submit
          </Button>
        </Form>
        <p>Authors: Ethan Rigor, John Shaw, Elijah Jeudy, Maddox Florez</p>
      </footer>
    </div>
  );
}

export default CurrentResultPage;
