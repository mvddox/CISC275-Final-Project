import React from 'react';
import { PreviousResultType } from '../../AIResultsContext';
import ValueBars from './valueBars';

export interface resultValues{
    empathy: number,
    workLifeBalance: number,
    ambition: number,
}

export interface DetailedResultType{
    results: string[]; // list of results for each question
    finalResult: string; // general summary
    finalSentence: string; // final job title
    finalDeclaredFuture: string // fun stuff
    finalCareer: string // what they are going to do in future
    colorVibe: string, // color vibe
    date: string
    values: resultValues
    salary: string // salary range for the career
    description: string // description of career   
    education: string // education level for job
}
export interface BasicResultType{
  results: string[]; // list of results for each question
  finalResult: string; // general summary
  finalSentence: string; // final job title
  finalDeclaredFuture: string // fun stuff
  finalCareer: string // what they are going to do in future
  colorVibe: string, // color vibe  
  salary: string, //salary range 
  description: string, // description of career
  education: string // education level for career
  date: string
}

//typeguard to check if it is detailed; inversley it would be basic
export function isDetailed(object: PreviousResultType): object is DetailedResultType {
  return 'values' in object;
}

function PreviousResult({finishedResult, complete}: {finishedResult: PreviousResultType, complete: boolean}){
      return <div className="results-container">
        {isDetailed(finishedResult) ? <div>Detailed Result</div>: <div>Basic Result</div>}
        {/* Just like my heckin fortune!!! Shows a defined, simple, determined result */}
        <div className="final-career" style={{"color":finishedResult.colorVibe}}>
          {finishedResult.finalDeclaredFuture +" ~~ "+ finishedResult.finalCareer}
        </div>
        {/* Shows individual insights if finished loading */}
        {complete ? <div className="results-list">
          <ul style={{ listStyleType: "none", paddingLeft: 0, margin: 0 }}>
            {finishedResult.results.map((res: string, i: number) => (
              <li key={i}>{res}</li>
            ))}
          </ul>
        </div>: <></>}
        {/* Shows the career's salary range */}
        <div className="salary">
          {"Salary Range: " + finishedResult.salary}
        </div>
        {/* Shows a description of the career */}
        <div className="description">
          <strong>Career Description: </strong> <br /> {finishedResult.description}
        </div>
        {/* Shows character analysis */}
        <div className="final-results">
          <h3>Character Analysis:</h3>
          <p>{finishedResult.finalResult}</p>
        </div>
        {/* Shows career prediction */}
        <div className="final-sentence">
          <h3>Overall Suggestion:</h3>
          <p>{finishedResult.finalSentence}</p>
        </div>

        {isDetailed(finishedResult) && complete ?
            <ValueBars values={finishedResult.values}></ValueBars>
        : <></>}

        <div className="date">Achieved at: {finishedResult.date}</div>
        {/*Makes user not do stupid stuff, (or more correctly, us less liable!)*/}
        <div className="ai-disclaimer">
          <div>"I THINK THEREFORE I AM!" You think your own thoughts, not the AI, and therefore you act your own actions</div>
          <div>Generated by AI: All choices are yours, and the future is ultimately in your hands. Not responsible for any user damages.</div>
        </div>
      </div>
}
export default PreviousResult